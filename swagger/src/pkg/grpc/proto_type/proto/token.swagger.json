{
  "swagger": "2.0",
  "info": {
    "title": "Token Service API",
    "description": "API for Token Service",
    "version": "1.0",
    "contact": {
      "name": "API Support",
      "url": "https://github.com/your-repo",
      "email": "support@example.com"
    }
  },
  "tags": [
    {
      "name": "TokenProtoService"
    }
  ],
  "host": "localhost:7979",
  "schemes": [
    "http",
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/v1/tokens": {
      "get": {
        "description": "Get all tokens",
        "operationId": "TokenProtoService_GetTokens",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/tokenGetTokensResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "tokenId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "TokenProtoService"
        ]
      },
      "post": {
        "description": "Create a new token",
        "operationId": "TokenProtoService_PostToken",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/tokenPostTokenResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "tokenId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "TokenProtoService"
        ]
      }
    },
    "/v1/tokens/validate": {
      "post": {
        "description": "Validate a token",
        "operationId": "TokenProtoService_PostValidateToken",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/tokenPostValidateTokenResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "tokenId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "TokenProtoService"
        ]
      }
    },
    "/v1/tokens/{tokenId}": {
      "get": {
        "description": "Get a token by ID",
        "operationId": "TokenProtoService_GetToken",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/tokenGetTokenResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "tokenId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "TokenProtoService"
        ]
      },
      "delete": {
        "description": "Delete a token",
        "operationId": "TokenProtoService_DeleteToken",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/tokenDeleteTokenResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "tokenId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "TokenProtoService"
        ]
      },
      "put": {
        "description": "Update a token",
        "operationId": "TokenProtoService_PutToken",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/tokenPutTokenResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "tokenId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "TokenProtoService"
        ]
      }
    }
  },
  "definitions": {
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "tokenDeleteTokenResponse": {
      "type": "object",
      "properties": {
        "tokenId": {
          "type": "string"
        }
      }
    },
    "tokenGetTokenResponse": {
      "type": "object",
      "properties": {
        "tokenId": {
          "type": "string"
        }
      }
    },
    "tokenGetTokensResponse": {
      "type": "object",
      "properties": {
        "tokenId": {
          "type": "string"
        }
      }
    },
    "tokenPostTokenResponse": {
      "type": "object",
      "properties": {
        "tokenId": {
          "type": "string"
        }
      }
    },
    "tokenPostValidateTokenResponse": {
      "type": "object",
      "properties": {
        "tokenId": {
          "type": "string"
        }
      }
    },
    "tokenPutTokenResponse": {
      "type": "object",
      "properties": {
        "tokenId": {
          "type": "string"
        }
      }
    }
  }
}
