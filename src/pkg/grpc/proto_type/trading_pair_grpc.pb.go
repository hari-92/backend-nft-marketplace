// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.5.1
// - protoc             v3.21.12
// source: trading_pair.proto

package __

import (
	grpc "google.golang.org/grpc"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.64.0 or later.
const _ = grpc.SupportPackageIsVersion9

// TradingPairProtoServiceClient is the client API for TradingPairProtoService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
//
// TradingPair service definition
type TradingPairProtoServiceClient interface {
}

type tradingPairProtoServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewTradingPairProtoServiceClient(cc grpc.ClientConnInterface) TradingPairProtoServiceClient {
	return &tradingPairProtoServiceClient{cc}
}

// TradingPairProtoServiceServer is the server API for TradingPairProtoService service.
// All implementations must embed UnimplementedTradingPairProtoServiceServer
// for forward compatibility.
//
// TradingPair service definition
type TradingPairProtoServiceServer interface {
	mustEmbedUnimplementedTradingPairProtoServiceServer()
}

// UnimplementedTradingPairProtoServiceServer must be embedded to have
// forward compatible implementations.
//
// NOTE: this should be embedded by value instead of pointer to avoid a nil
// pointer dereference when methods are called.
type UnimplementedTradingPairProtoServiceServer struct{}

func (UnimplementedTradingPairProtoServiceServer) mustEmbedUnimplementedTradingPairProtoServiceServer() {
}
func (UnimplementedTradingPairProtoServiceServer) testEmbeddedByValue() {}

// UnsafeTradingPairProtoServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to TradingPairProtoServiceServer will
// result in compilation errors.
type UnsafeTradingPairProtoServiceServer interface {
	mustEmbedUnimplementedTradingPairProtoServiceServer()
}

func RegisterTradingPairProtoServiceServer(s grpc.ServiceRegistrar, srv TradingPairProtoServiceServer) {
	// If the following call pancis, it indicates UnimplementedTradingPairProtoServiceServer was
	// embedded by pointer and is nil.  This will cause panics if an
	// unimplemented method is ever invoked, so we test this at initialization
	// time to prevent it from happening at runtime later due to I/O.
	if t, ok := srv.(interface{ testEmbeddedByValue() }); ok {
		t.testEmbeddedByValue()
	}
	s.RegisterService(&TradingPairProtoService_ServiceDesc, srv)
}

// TradingPairProtoService_ServiceDesc is the grpc.ServiceDesc for TradingPairProtoService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var TradingPairProtoService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "trading_pair.TradingPairProtoService",
	HandlerType: (*TradingPairProtoServiceServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams:     []grpc.StreamDesc{},
	Metadata:    "trading_pair.proto",
}
